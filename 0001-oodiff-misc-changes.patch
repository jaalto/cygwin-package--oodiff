From f5726eeb170738c3116bfa9a7f25ed4a7b437771 Mon Sep 17 00:00:00 2001
From: Jari Aalto <jari.aalto@cante.net>
Date: Fri, 28 Mar 2008 17:21:41 +0200
Subject: [PATCH] oodiff: misc changes

Signed-off-by: Jari Aalto <jari.aalto@cante.net>
---
 oodiff |  140 +++++++++++++++++++++++++++++++++++++++------------------------
 1 files changed, 87 insertions(+), 53 deletions(-)

diff --git a/oodiff b/oodiff
index 270cda2..c0f2e89 100644
--- a/oodiff
+++ b/oodiff
@@ -1,63 +1,97 @@
 #! /bin/sh
 
+prg=diff
 
-usage () {
-            cat << EOF
+if [ -x /opt/csw/bin/gdiff ]; then 			# SUN/OS Solaris
+    prg=/opt/csw/bin/gdiff
+fi
+
+DIFF_PROGRAM=${DIFF_PROGRAM:-$prg}
+
+usage ()
+{
+    echo "\
 Usage: $(basename $0) [options] FILE1 FILE2
-Options: Same as diff.
+Options are same as in diff command."
+}
 
-EOF
+clean_up ()
+{
+    [ "$ft1" ] && rm -f "$ft1"
+    [ "$ft2" ] && rm -f "$ft2"
 }
 
-file1=""
-file2=""
-
-while test $# -ne 0; do
-    case "$1" in
-        "--help"|"-h")
-	    usage
-            exit 0
-            ;;
-        "-"*)
-            opts="$opts $1"
-            ;;
-        *)
-            if [ x"$file1" = x"" ]; then
-                file1=$1
-            elif [ x"$file2" = x"" ]; then
-                file2=$1
-            else
-                usage
-                exit 1
-            fi
-            ;;
-    esac
-    shift
-done
-
-if [ -d "$file1" ]; then
-    # Be recursive.
-    # echo "entering $file1"
-    for file in "$file1"/*; do
-        "$0" $opts "$file" $(echo "$file" | sed "s@^$file1/@$file2/@")
+Main ()
+{
+    file1=""
+    file2=""
+
+    while test $# -ne 0; do
+	case "$1" in
+	    --help|-h)
+		usage
+		exit 0
+		;;
+	    -*)
+		opts="$opts $1"
+		;;
+	    *)
+		if [ ! "$file1" ]; then
+		    file1=$1
+		elif [ ! "$file2" ]; then
+		    file2=$1
+		else
+		    usage
+		    exit 1
+		fi
+		;;
+	esac
+	shift
     done
-else
-    ft1=`mktemp /tmp/oodiff.$$.1.XXXXXXXXXX` \
-        || ft1="/tmp/oodiff.$$.1"
-    ft2=`mktemp /tmp/oodiff.$$.2.XXXXXXXXXX` \
-        || ft2="/tmp/oodiff.$$.2"
-    if odt2txt  "$file1" > "$ft1" 2>/dev/null && \
-        odt2txt "$file2" > "$ft2" 2>/dev/null; then
-        if diff -L "$file1" -L "$file2" $opts "$ft1" "$ft2"; then
-        # no text change
-            if diff -q "$file1" "$file2"; then
-                : # no change at all
-            else
-                echo "OpenDocument files $file1 and $file2 files differ (same text content)"
-            fi
-        fi
+
+    if [ ! "$file1" ]; then
+	echo "$0: [ERROR] missing argument" >&2
+	return 1
+    fi
+
+    if [ -d "$file1" ]; then
+	# Be recursive.
+	# echo "entering $file1"
+	for file in "$file1"/*
+	do
+	    "$0" $opts "$file" $(echo "$file" | sed "s@^$file1/@$file2/@")
+	done
     else
-        diff $opts "$file1" "$file2"
+	ft1=$(mktemp /tmp/oodiff.$$.1.XXXXXXXXXX) \
+	    || ft1="/tmp/oodiff.$$.1"
+
+	ft2=$(amktemp /tmp/oodiff.$$.2.XXXXXXXXXX) \
+	    || ft2="/tmp/oodiff.$$.2"
+
+	trap 'clean_up; exit 0' 1 2 3 15
+
+	if odt2txt  "$file1" > "$ft1" 2>/dev/null && \
+	   odt2txt "$file2" > "$ft2" 2>/dev/null
+	then
+
+	    if $DIFF_PROGRAM -L "$file1" -L "$file2" $opts "$ft1" "$ft2"
+	    then
+		# no text change
+		if diff -q "$file1" "$file2"; then
+		    : # no change at all
+		else
+		    echo "OpenDocument files $file1 and $file2 files differ" \
+			 "(same text content)"
+		fi
+	    fi
+	else
+	    $DIFF_PROGRAM $opts "$file1" "$file2"
+	fi
+
+	clean_up
     fi
-    rm -f "$ft1" "$ft2"
-fi
+}
+
+Main "$@"
+
+# End of file
-- 
1.5.3.8

